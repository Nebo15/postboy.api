FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Postboy

Delivery service for Email or SMS messages.

## Features

- Pluggable upstream adapters.
- Supports HTTP or AMQP protocols.
- Configurable retry limits with backoff strategy.
- Configurable delivery shedules per Channel with timezone setting.
- Webhooks for status notifications.
- Configured concurrency limits.
- Per-message delivery history for easy debugging.
- Integrated Statsd/Dogstatsd metrics reporting.

## Supported upstreams

**Email**

| Service   | Adapter name              | Service URL                  |
| --------- | ------------------------- | ---------------------------- |
| Mailgun   | `Bamboo.MailgunAdapter`   | https://www.mailgun.com/     |
| Mailjet   | `Bamboo.MailjetAdapter`   | https://www.mailjet.com/     |
| Mandrill  | `Bamboo.MandrillAdapter`  | http://www.mandrill.com/     |
| SendGrid  | `Bamboo.SendGridAdapter`  | https://sendgrid.com/        |
| SparkPost | `Bamboo.SparkPostAdapter` | https://www.sparkpost.com/   |
| Postmark  | `Bamboo.PostmarkAdapter`  | https://postmarkapp.com/     |
| Sendcloud | `Bamboo.SendcloudAdapter` | https://www.sendcloud.nl/    |
| SMTP      | `Bamboo.SMTPAdapter`      | N/A                          |

**SMS**

| Service   | Adapter name                  | Service URL             |
| --------- | ----------------------------- | ----------------------- |
| Twilio    | `Postman.SMS.Adapters.Twilio` | https://www.twilio.com/ |
| Nexmo     | `Postman.SMS.Adapters.Nexmo`  | https://www.nexmo.com/  |

## TODOs

Resources:
- https://www.rabbitmq.com/blog/2015/04/16/scheduling-messages-with-rabbitmq/

Toughts:
- Pass all possible message params (if some missing - certain adapters will fail) so shedule can decide which type of notification when should be sent?
- Move retry policy and delivery shedule control out to Gandalf?

> Define a new Policy Controller object which can be internal (part of Postboy) or external (API call to Gandalf)?

## Service Accounts [/service_accounts]

Service Accounts is used to define adapters credentials. 
They are used in Channels specify which account in which service to use on each communication channel.

### List Service Accounts [GET]

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Account_Response`], fixed-type)

### Create Service Account [POST]

+ Request (application/json)
    + Attributes (object)
        + `service_account` (Service_Account)

+ Response 201 (application/json)
    + Headers
    
            Location: /service_accounts/58e2278a84092e61700041a7

    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Service_Account_Response`)

### Configure Service Account [PUT /service_accounts/{id}]

**Warning!** You should send whole `service_account` object, 
all unsets will drop existing values in updated Service Account.

+ Parameters
    + id: 58e2278a84092e61700041a7 (string)

+ Request (application/json)
    + Attributes (object)
        + `service_account` (`Service_Account`)'
            + settings
                + mailchimp (object)
                    + is_enabled: false (boolean, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Service_Account_Response`, required)
            + settings (`Service_Account__Settings`, required)
                + mailchimp (object)
                    + is_enabled: false (boolean, optional)

### Delete Service Account [DELETE /service_accounts/{id}]

+ Parameters
    + id: 58e2278a84092e61700041a7 (string)

+ Request (application/json)
+ Response 200 (application/json)

## Delivery Channels [/channels]

### Search for a Channel [GET /channels{?limit,starting_after,ending_before,labels,title,type}]

+ Parameters
    + labels: `label-name1,label-name2` (string, optional) - Label names to filter Channels list.
    + limit: 20 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
    + starting_after: 56c31536a60ad644060041af (string, optional) - A cursor to fetch next page. Taken from collection response.
    + ending_before: 56c31536a60ad644060041aa (string, optional) - A cursor to fetch previous page. Taken from collection response.
    + title: Signup (string, optional) - Substring search for a title.
    + type: email (Channel_Type, required) - Type of a Channel.

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Channel], fixed-type)

### Create Channel [POST]

+ Request (application/json)
    + Attributes (object)
        + channel (Channel)

+ Response 201 (application/json)
    + Headers
    
            Location: /channels/58e2278a84092e61700041a7

    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Channel)

### Get Channel by ID [GET /channels/{id}]

+ Parameters
    + id: 58e2278a84092e61700041a7 (string)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Channel)

### Replace Channel [PUT /channels/{id}]

+ Parameters
    + id: 58e2278a84092e61700041a7 (string)

+ Request (application/json)
    + Attributes (object)
        + channel (Channel)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Channel)

### Update Channel [PATCH /channels/{id}]

+ Parameters
    + id: 58e2278a84092e61700041a7 (string)

+ Request (application/json)
    + Attributes (object)
        + channel (object)
            + description: `New Channel description` (string, optional)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Channel)
            + description: `New Channel description` (string, required)

### Delete Channel [DELETE /channels/{id}]

+ Parameters
    + id: 58e2278a84092e61700041a7 (string)

+ Request (application/json)
+ Response 200 (application/json)

## Messages [/channels/{channel_id}/messages]

+ Parameters
    + channel_id: 58e2278a84092e61700041a7 (string) - ID of a Channel

### Send Message [POST]

+ Request (application/json)
    + Attributes (object)
        + message (Message)

+ Response 202 (application/json)
    + Headers
    
            Location: /messages/19283874747

    + Attributes (Response_OK)
        + meta
            + code: 202
        + data (Message_Response)

### Get Messages [GET /messages{?limit,starting_after,ending_before,channel_ids,statuses}]

+ Parameters
    + limit: 20 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
    + starting_after: 56c31536a60ad644060041af (string, optional) - A cursor to fetch next page. Taken from collection response.
    + ending_before: 56c31536a60ad644060041aa (string, optional) - A cursor to fetch previous page. Taken from collection response.
    + channel_ids: 58e2278a84092e61700041a7 (string, required) - List of Channel IDs joined by comma.
    + statuses: accepted,declined (string, required) - List of Message statuses joined by comma.

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Message_Response)

### Get Message by ID [GET /messages/{id}]

+ Parameters
    + id: 19283874747 (string)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Message_Response)

# Data Structures
## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ code: 200 (number) - HTTP response code.
+ `idempotency_key`: `idemp-ssjssdjoa8308u0us0` (string, optional) - [Idempotency key](http://docs.apimanifest.apiary.io/#introduction/optional-features/idempotent-requests). Send it trough `X-Idempotency-Key` header.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 1000 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

## Channels
### Channel
+ title: `Sign-Up Emails` (string, required) - Channel UI title with max length 255 characters.
+ description: `Channel for emails that should be sent on Sign-Up process` (string, optional) - Channel UI description with max length 510 characters.
+ labels (array[string], fixed-type) - List of strings. Max length for element is 100 characters.
    + `group/emails` (string)
    + `action/signup` (string)
    + `other_tag` (string)
+ type (Channel_Type, required) - Delivery channel
+ `service_account_id`: slhaowjjdju (string, required) - ID of service account to be used for a Channel Messages.
+ `schedule_rules` (array[Schedule], fixed-type) - **Warning!** You can create overlapping shedules. In this case adapter pick is non-deterministic and appying rule will be picked randomly.
+ `retry_policy` (Retry_Policy)
+ defaults (object, optional) - Default values for Messages in this channel.
    + from: `MyService@example.com` (string, optional) - Sender ID for channels that support it.
    + One of
        + data (`Email_Data`, required)
        + data (`Phone_Data`, required)
    + `webhook_url`: `http://example.com/delivery_status` (string, optional)

### `Channel_Response` (Channel)
+ id: 58e2278a84092e61700041a7 (string, optional)
+ created_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Channel_Type` (enum)
- email (string) - Send Email message via supported adapter.
- phone (string) - Send SMS message via supported adapter.

### `Schedule`
+ adapter (enum, required)
    - Bamboo.MailgunAdapter (string)
    - Bamboo.MailjetAdapter (string)
    - Bamboo.MandrillAdapter (string)
    - Bamboo.SendGridAdapter (string)
    - Bamboo.SparkPostAdapter (string)
    - Bamboo.PostmarkAdapter (string)
    - Bamboo.SendcloudAdapter (string)
    - Bamboo.SMTPAdapter (string)
    - Postman.SMS.Adapters.Twilio (string)
    - Postman.SMS.Adapters.Nexmo (string)
+ weekdays (array[enum], required)
    - monday (string, optional)
    - tuesday (string, optional)
    - wednesday (string, optional)
    - thursday (string, optional)
    - friday (string, optional)
    - sunday (string, optional)
+ timeframes (array[`Schedule__Item__Timeframe`], required)

### `Schedule__Item__Timeframe`
+ from: `11:00:00` (string, required) - Delivery window begin time.
+ to: `15:00:00` (string, required) - Delivery window end time.

### `Retry_Policy`
+ limit: 5 (number, required) - Number of retries before message will fail to deliver. If value is set to 0, message will be never re-delivered.
+ `interval`: 60 (number, optional) - Time basis (in seconds) to the next delivery attempt.
+ `max_interval`: 3600 (number, optional) - Maximum interval between resend retries (including backoff).
+ backoff: exponential (enum, optional) - Backoff strategy.
    - static (string) - Do not increase initial interval when retrying requests: `max(initial_interval*0.75+rand(0, max(initial_interval*0.25, 1)), max_interval)`.
    - exponential (string) - Truncated binary exponential. Increases timeout exponentially on each delivery failure: `max(2^retry+initial_interval*0.75+rand(0, max(initial_interval*0.25, 1)), max_interval)`.

## `Service_Accounts`
### `Service_Account`
+ name: `My first service account` (string, required) - Service Account UI title with max length 255 characters. 
+ settings (`Service_Account__Settings`, required)

### `Service_Account__Settings`
+ mailgun (object)
    - `api_key`: `mailgun_api_key` (string, required) - Mailgun API key/secret.
    - `is_enabled`: true (boolean, required)
+ mailjet (object)
    - `api_key`: `mailjet_api_key` (string, required) - Mailjet API key/secret.
    - `is_enabled`: true (boolean, required)
+ mandrill (object)
    - `api_key`: `mandrill_api_key` (string, required) - Mandrill API key/secret.
    - `is_enabled`: true (boolean, required)
+ sendgrid (object)
    - `api_key`: `sendgrid_api_key` (string, required) - SendGrid API key/secret.
    - `is_enabled`: true (boolean, required)
+ sparkpost (object)
    - `api_key`: `sparkpos_api_key` (string, required) - SparkPost API key/secret.
    - `is_enabled`: true (boolean, required)
+ postmark (object)
    - `api_key`: `postmark_api_key` (string, required) - Postmark API key/secret.
    - `is_enabled`: true (boolean, required)
+ sendcloud (object)
    - `api_key`: `sendcloud_api_key` (string, required) - Sendcloud API key/secret.
    - `is_enabled`: true (boolean, required)
+ smtp (object)
    - `api_key`: `smtp_api_key` (string, required) - SMTP API key/secret.
    - `is_enabled`: true (boolean, required)
+ twilio (object)
    - `api_key`: `twilio_api_key` (string, required) - Twilio API key/secret.
    - `is_enabled`: true (boolean, required)
+ nexmo (object)
    - `api_key`: `nexmo_api_key` (string, required) - Nexmo API key/secret.
    - `is_enabled`: true (boolean, required)

### `Service_Account_Response` (`Service_Account`)
+ id: 12321314 (string, optional) - External ID may be used when saving notification ID for later pooling is not desired. MUST be unique.

## Messages
### Message
+ `external_id`: 123 (string, optional) - External ID may be used when saving notification ID for later pooling is not desired. MUST be unique.
+ to: `bob@example.com` (string, required) - Recipient's ID in specified channel.
+ from: `MyService@example.com` (string, optional) - Sender ID for channels that support it.
+ One of
    + data (`Email_Data`, required)
    + data (`Phone_Data`, required)
+ `webhook_url`: `http://example.com/delivery_status` (string, optional)
+ timezone: `Europe/Kiev` (string, optional) - Timezone to correct delivery windows for customers in other countries.

### `Message_Response`
+ id: 12321314 (string, optional) - External ID may be used when saving notification ID for later pooling is not desired. MUST be unique.
+ created_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ status: accepted (Message_Status, required)
+ actions (array[Message_Action], fixed-type)

### `Message_Status` (enum)
- accepted (string) - Message is accepted and sheduled for delivery.
- send (string) - Message is delivered to destination gateway.
- delivered (string) - Message is delivered to recipient. (Works only on some adapters and gateways, that is a able to receive real message delivery status.)
- failed (string) - Message can not be delivered (see `actions` to find out why).

### `Message_Action` (object)
+ name: created (enum, required)
    + created (string) - Message created.
    + `delivered_to_upstream` - Message delivered to upstream service.
    + `delivered_to_recipient` - Message delivered to recipient (on upstreams that report it).
    + `delivery_failed` - Service tried to deliver message and failed. (May occur many times for each try.)
+ `metadata` (object, optional)
+ `created_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

## Emails
### `Email_Data`
+ subject: `Hello Bob` (string, required)
+ html_body: `I have a <b>gift</b> for you` (string, required)
+ text_body: `I have a gift for you` (string, optional)

## Phone
### `Phone_Data`
+ text: `Hey, how about to hand out togather?` (string, required)